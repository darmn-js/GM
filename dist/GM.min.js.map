{"version":3,"file":"GM.min.js","sources":["../functions/couchHandler.js"],"sourcesContent":["/* eslint-disable import/no-unresolved */\nimport API from 'src/util/api';\nimport UI from 'src/util/ui';\n\nexport class couchHandler {\n  constructor(sample, roc, options = {}) {\n    let {\n      couchDB = {\n        url: 'https://gat.mylims.org/roc',\n        database: 'eln',\n        kind: 'sample',\n      },\n      reference = undefined,\n    } = options;\n    this.reference = reference;\n    this.targetReference = reference.split(' ')[0];\n    this.couchDB = couchDB;\n    this.roc = roc;\n    this.sample = sample;\n  }\n\n  updateSample(sample) {\n    this.sample = sample;\n  }\n\n  getToc(toc, varName) {\n    const targetReference = this.targetReference;\n    this.roc.query(toc).then(function (data) {\n      data = data.filter(\n        (item) => item.value.reference.split(' ')[0] === targetReference,\n      );\n      API.createData(varName, data);\n    });\n  }\n\n  loadSampleFeatures(viewKind, options) {\n    const { showNotification = true } = options;\n    const content = this.sample.sample.$content;\n    const sampleKind = this.getParentKind();\n    const sampleIdentifier =\n      sampleKind === viewKind\n        ? content.general.metadata.sampleIdentifier\n        : 'This field must be replace it';\n    API.createData('content', content);\n    API.createData('sampleIdentifier', sampleIdentifier);\n    if (showNotification) {\n      UI.showNotification('Updated current sample', 'success');\n    }\n  }\n\n  async createSample(entrysample, kind, sampleBatch, sampleReference) {\n    const roc = this.roc;\n    UI.confirm(`<div> Are you sure to save: ${sampleBatch}? </div>`).then(\n      function (result) {\n        if (!result) return;\n        entrysample.$id = [sampleReference, sampleBatch];\n        entrysample.$content.general.kind = kind;\n        if (result.sample) entrysample.$id.push(result.sample);\n        let userInfo = API.cache('userInfo');\n        if (userInfo) {\n          entrysample.$owners = [userInfo.email];\n        }\n        roc.create(entrysample);\n        API.doAction('updateSamples');\n      },\n    );\n  }\n\n  getJSONTemplate() {\n    const result = {\n      $type: 'entry',\n      $id: ['reference', 'batchID'],\n      $kind: 'sample',\n      $owners: ['admin@cheminfo.org'],\n      $content: '',\n      $lastModification: 'admin@cheminfo.org',\n      $modificationDate: '',\n      $creationDate: '',\n    };\n    result.$content = this.sample.sample.$content;\n    result.$content.image = [];\n    result.$content.spectra = {};\n    result.$content.general.metadata.parent = this.getParent();\n    result.$content.general.metadata.sampleIdentifier = API.getData(\n      'sampleIdentifier',\n    ).resurrect();\n    return result;\n  }\n\n  getParentKind() {\n    return this.sample.sample.$content.general.kind;\n  }\n\n  getParent() {\n    const sample = this.sample.sample;\n    return {\n      reference: sample.$id[0],\n      batch: sample.$id[1],\n      uuid: sample._id,\n    };\n  }\n\n  builtSampleBatch() {\n    const sampleIdentifier = API.getData('sampleIdentifier').resurrect();\n    return `${sampleIdentifier}`;\n  }\n}\n"],"names":["constructor","sample","roc","options","couchDB","url","database","kind","reference","targetReference","split","updateSample","getToc","toc","varName","this","query","then","data","filter","item","value","API","createData","loadSampleFeatures","viewKind","showNotification","content","$content","sampleIdentifier","getParentKind","general","metadata","UI","entrysample","sampleBatch","sampleReference","confirm","result","$id","push","userInfo","cache","$owners","email","create","doAction","getJSONTemplate","$type","$kind","$lastModification","$modificationDate","$creationDate","image","spectra","parent","getParent","getData","resurrect","batch","uuid","_id","builtSampleBatch"],"mappings":"8aAIO,MACLA,YAAYC,EAAQC,EAAKC,EAAU,QAC7BC,QACFA,EAAU,CACRC,IAAK,6BACLC,SAAU,MACVC,KAAM,UAJNC,UAMFA,GACEL,OACCK,UAAYA,OACZC,gBAAkBD,EAAUE,MAAM,KAAK,QACvCN,QAAUA,OACVF,IAAMA,OACND,OAASA,EAGhBU,aAAaV,QACNA,OAASA,EAGhBW,OAAOC,EAAKC,SACJL,EAAkBM,KAAKN,qBACxBP,IAAIc,MAAMH,GAAKI,MAAK,SAAUC,GACjCA,EAAOA,EAAKC,QACTC,GAASA,EAAKC,MAAMb,UAAUE,MAAM,KAAK,KAAOD,IAEnDa,UAAIC,WAAWT,EAASI,MAI5BM,mBAAmBC,EAAUtB,SACrBuB,iBAAEA,GAAmB,GAASvB,EAC9BwB,EAAUZ,KAAKd,OAAOA,OAAO2B,SAE7BC,EADad,KAAKe,kBAEPL,EACXE,EAAQI,QAAQC,SAASH,iBACzB,gCACNP,UAAIC,WAAW,UAAWI,GAC1BL,UAAIC,WAAW,mBAAoBM,GAC/BH,GACFO,UAAGP,iBAAiB,yBAA0B,8BAI/BQ,EAAa3B,EAAM4B,EAAaC,SAC3ClC,EAAMa,KAAKb,IACjB+B,UAAGI,QAAS,+BAA8BF,aAAuBlB,MAC/D,SAAUqB,OACHA,EAAQ,OACbJ,EAAYK,IAAM,CAACH,EAAiBD,GACpCD,EAAYN,SAASG,QAAQxB,KAAOA,EAChC+B,EAAOrC,QAAQiC,EAAYK,IAAIC,KAAKF,EAAOrC,YAC3CwC,EAAWnB,UAAIoB,MAAM,YACrBD,IACFP,EAAYS,QAAU,CAACF,EAASG,QAElC1C,EAAI2C,OAAOX,GACXZ,UAAIwB,SAAS,oBAKnBC,wBACQT,EAAS,CACbU,MAAO,QACPT,IAAK,CAAC,YAAa,WACnBU,MAAO,SACPN,QAAS,CAAC,sBACVf,SAAU,GACVsB,kBAAmB,qBACnBC,kBAAmB,GACnBC,cAAe,WAEjBd,EAAOV,SAAWb,KAAKd,OAAOA,OAAO2B,SACrCU,EAAOV,SAASyB,MAAQ,GACxBf,EAAOV,SAAS0B,QAAU,GAC1BhB,EAAOV,SAASG,QAAQC,SAASuB,OAASxC,KAAKyC,YAC/ClB,EAAOV,SAASG,QAAQC,SAASH,iBAAmBP,UAAImC,QACtD,oBACAC,YACKpB,EAGTR,uBACSf,KAAKd,OAAOA,OAAO2B,SAASG,QAAQxB,KAG7CiD,kBACQvD,EAASc,KAAKd,OAAOA,aACpB,CACLO,UAAWP,EAAOsC,IAAI,GACtBoB,MAAO1D,EAAOsC,IAAI,GAClBqB,KAAM3D,EAAO4D,KAIjBC,yBAEU,GADiBxC,UAAImC,QAAQ,oBAAoBC"}